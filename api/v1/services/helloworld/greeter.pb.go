// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        v5.27.2
// source: v1/protos/helloworld/greeter.proto

package helloworld

import (
	rpcerr "github.com/origadmin/toolkits/errors/rpcerr"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	descriptorpb "google.golang.org/protobuf/types/descriptorpb"
	anypb "google.golang.org/protobuf/types/known/anypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Greeter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *Greeter) Reset() {
	*x = Greeter{}
	mi := &file_v1_protos_helloworld_greeter_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Greeter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Greeter) ProtoMessage() {}

func (x *Greeter) ProtoReflect() protoreflect.Message {
	mi := &file_v1_protos_helloworld_greeter_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Greeter.ProtoReflect.Descriptor instead.
func (*Greeter) Descriptor() ([]byte, []int) {
	return file_v1_protos_helloworld_greeter_proto_rawDescGZIP(), []int{0}
}

func (x *Greeter) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Greeter) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// The request message containing the user's name.
type GreeterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *GreeterRequest) Reset() {
	*x = GreeterRequest{}
	mi := &file_v1_protos_helloworld_greeter_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GreeterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GreeterRequest) ProtoMessage() {}

func (x *GreeterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_protos_helloworld_greeter_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GreeterRequest.ProtoReflect.Descriptor instead.
func (*GreeterRequest) Descriptor() ([]byte, []int) {
	return file_v1_protos_helloworld_greeter_proto_rawDescGZIP(), []int{1}
}

func (x *GreeterRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GreeterRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// The response message containing the greetings
type GreeterReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *Greeter `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GreeterReply) Reset() {
	*x = GreeterReply{}
	mi := &file_v1_protos_helloworld_greeter_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GreeterReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GreeterReply) ProtoMessage() {}

func (x *GreeterReply) ProtoReflect() protoreflect.Message {
	mi := &file_v1_protos_helloworld_greeter_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GreeterReply.ProtoReflect.Descriptor instead.
func (*GreeterReply) Descriptor() ([]byte, []int) {
	return file_v1_protos_helloworld_greeter_proto_rawDescGZIP(), []int{2}
}

func (x *GreeterReply) GetData() *Greeter {
	if x != nil {
		return x.Data
	}
	return nil
}

type CreateGreeterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *Greeter `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *CreateGreeterRequest) Reset() {
	*x = CreateGreeterRequest{}
	mi := &file_v1_protos_helloworld_greeter_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateGreeterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateGreeterRequest) ProtoMessage() {}

func (x *CreateGreeterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_protos_helloworld_greeter_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateGreeterRequest.ProtoReflect.Descriptor instead.
func (*CreateGreeterRequest) Descriptor() ([]byte, []int) {
	return file_v1_protos_helloworld_greeter_proto_rawDescGZIP(), []int{3}
}

func (x *CreateGreeterRequest) GetData() *Greeter {
	if x != nil {
		return x.Data
	}
	return nil
}

type CreateGreeterReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateGreeterReply) Reset() {
	*x = CreateGreeterReply{}
	mi := &file_v1_protos_helloworld_greeter_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateGreeterReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateGreeterReply) ProtoMessage() {}

func (x *CreateGreeterReply) ProtoReflect() protoreflect.Message {
	mi := &file_v1_protos_helloworld_greeter_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateGreeterReply.ProtoReflect.Descriptor instead.
func (*CreateGreeterReply) Descriptor() ([]byte, []int) {
	return file_v1_protos_helloworld_greeter_proto_rawDescGZIP(), []int{4}
}

type UpdateGreeterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Data *Greeter `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *UpdateGreeterRequest) Reset() {
	*x = UpdateGreeterRequest{}
	mi := &file_v1_protos_helloworld_greeter_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateGreeterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateGreeterRequest) ProtoMessage() {}

func (x *UpdateGreeterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_protos_helloworld_greeter_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateGreeterRequest.ProtoReflect.Descriptor instead.
func (*UpdateGreeterRequest) Descriptor() ([]byte, []int) {
	return file_v1_protos_helloworld_greeter_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateGreeterRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateGreeterRequest) GetData() *Greeter {
	if x != nil {
		return x.Data
	}
	return nil
}

type UpdateGreeterReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool       `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Data    []*Greeter `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *UpdateGreeterReply) Reset() {
	*x = UpdateGreeterReply{}
	mi := &file_v1_protos_helloworld_greeter_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateGreeterReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateGreeterReply) ProtoMessage() {}

func (x *UpdateGreeterReply) ProtoReflect() protoreflect.Message {
	mi := &file_v1_protos_helloworld_greeter_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateGreeterReply.ProtoReflect.Descriptor instead.
func (*UpdateGreeterReply) Descriptor() ([]byte, []int) {
	return file_v1_protos_helloworld_greeter_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateGreeterReply) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *UpdateGreeterReply) GetData() []*Greeter {
	if x != nil {
		return x.Data
	}
	return nil
}

type DeleteGreeterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteGreeterRequest) Reset() {
	*x = DeleteGreeterRequest{}
	mi := &file_v1_protos_helloworld_greeter_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteGreeterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteGreeterRequest) ProtoMessage() {}

func (x *DeleteGreeterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_protos_helloworld_greeter_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteGreeterRequest.ProtoReflect.Descriptor instead.
func (*DeleteGreeterRequest) Descriptor() ([]byte, []int) {
	return file_v1_protos_helloworld_greeter_proto_rawDescGZIP(), []int{7}
}

func (x *DeleteGreeterRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeleteGreeterReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteGreeterReply) Reset() {
	*x = DeleteGreeterReply{}
	mi := &file_v1_protos_helloworld_greeter_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteGreeterReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteGreeterReply) ProtoMessage() {}

func (x *DeleteGreeterReply) ProtoReflect() protoreflect.Message {
	mi := &file_v1_protos_helloworld_greeter_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteGreeterReply.ProtoReflect.Descriptor instead.
func (*DeleteGreeterReply) Descriptor() ([]byte, []int) {
	return file_v1_protos_helloworld_greeter_proto_rawDescGZIP(), []int{8}
}

type GetGreeterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetGreeterRequest) Reset() {
	*x = GetGreeterRequest{}
	mi := &file_v1_protos_helloworld_greeter_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetGreeterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGreeterRequest) ProtoMessage() {}

func (x *GetGreeterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_protos_helloworld_greeter_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGreeterRequest.ProtoReflect.Descriptor instead.
func (*GetGreeterRequest) Descriptor() ([]byte, []int) {
	return file_v1_protos_helloworld_greeter_proto_rawDescGZIP(), []int{9}
}

func (x *GetGreeterRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetGreeterReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetGreeterReply) Reset() {
	*x = GetGreeterReply{}
	mi := &file_v1_protos_helloworld_greeter_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetGreeterReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGreeterReply) ProtoMessage() {}

func (x *GetGreeterReply) ProtoReflect() protoreflect.Message {
	mi := &file_v1_protos_helloworld_greeter_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGreeterReply.ProtoReflect.Descriptor instead.
func (*GetGreeterReply) Descriptor() ([]byte, []int) {
	return file_v1_protos_helloworld_greeter_proto_rawDescGZIP(), []int{10}
}

type ListGreeterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Current page
	Current *int32 `protobuf:"varint,1,opt,name=current,proto3,oneof" json:"current,omitempty"`
	// The number of lines per page
	PageSize *int32 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3,oneof" json:"page_size,omitempty"`
	// Whether not paging
	NoPaging *bool `protobuf:"varint,5,opt,name=no_paging,json=noPaging,proto3,oneof" json:"no_paging,omitempty"`
}

func (x *ListGreeterRequest) Reset() {
	*x = ListGreeterRequest{}
	mi := &file_v1_protos_helloworld_greeter_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListGreeterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListGreeterRequest) ProtoMessage() {}

func (x *ListGreeterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_protos_helloworld_greeter_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListGreeterRequest.ProtoReflect.Descriptor instead.
func (*ListGreeterRequest) Descriptor() ([]byte, []int) {
	return file_v1_protos_helloworld_greeter_proto_rawDescGZIP(), []int{11}
}

func (x *ListGreeterRequest) GetCurrent() int32 {
	if x != nil && x.Current != nil {
		return *x.Current
	}
	return 0
}

func (x *ListGreeterRequest) GetPageSize() int32 {
	if x != nil && x.PageSize != nil {
		return *x.PageSize
	}
	return 0
}

func (x *ListGreeterRequest) GetNoPaging() bool {
	if x != nil && x.NoPaging != nil {
		return *x.NoPaging
	}
	return false
}

type ListGreeterReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool          `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Total   int32         `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	Data    []*Greeter    `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
	Error   *rpcerr.Error `protobuf:"bytes,4,opt,name=error,proto3" json:"error,omitempty"`
	Extra   *anypb.Any    `protobuf:"bytes,5,opt,name=extra,proto3" json:"extra,omitempty"`
}

func (x *ListGreeterReply) Reset() {
	*x = ListGreeterReply{}
	mi := &file_v1_protos_helloworld_greeter_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListGreeterReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListGreeterReply) ProtoMessage() {}

func (x *ListGreeterReply) ProtoReflect() protoreflect.Message {
	mi := &file_v1_protos_helloworld_greeter_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListGreeterReply.ProtoReflect.Descriptor instead.
func (*ListGreeterReply) Descriptor() ([]byte, []int) {
	return file_v1_protos_helloworld_greeter_proto_rawDescGZIP(), []int{12}
}

func (x *ListGreeterReply) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ListGreeterReply) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListGreeterReply) GetData() []*Greeter {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ListGreeterReply) GetError() *rpcerr.Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ListGreeterReply) GetExtra() *anypb.Any {
	if x != nil {
		return x.Extra
	}
	return nil
}

var file_v1_protos_helloworld_greeter_proto_extTypes = []protoimpl.ExtensionInfo{
	{
		ExtendedType:  (*descriptorpb.MessageOptions)(nil),
		ExtensionType: (*Greeter)(nil),
		Field:         1000,
		Name:          "api.v1.services.helloworld.data",
		Tag:           "bytes,1000,opt,name=data",
		Filename:      "v1/protos/helloworld/greeter.proto",
	},
}

// Extension fields to descriptorpb.MessageOptions.
var (
	// optional api.v1.services.helloworld.Greeter data = 1000;
	E_Data = &file_v1_protos_helloworld_greeter_proto_extTypes[0]
)

var File_v1_protos_helloworld_greeter_proto protoreflect.FileDescriptor

var file_v1_protos_helloworld_greeter_proto_rawDesc = []byte{
	0x0a, 0x22, 0x76, 0x31, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x68, 0x65, 0x6c, 0x6c,
	0x6f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2f, 0x67, 0x72, 0x65, 0x65, 0x74, 0x65, 0x72, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1a, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x68, 0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x6f, 0x72, 0x6c, 0x64,
	0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e,
	0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1a, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x73, 0x2f, 0x72, 0x70, 0x63, 0x65, 0x72, 0x72, 0x2f, 0x72, 0x70, 0x63, 0x65, 0x72, 0x72, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f,
	0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x2d, 0x0a, 0x07, 0x47, 0x72, 0x65, 0x65, 0x74,
	0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x34, 0x0a, 0x0e, 0x47, 0x72, 0x65, 0x65, 0x74, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x47, 0x0a, 0x0c,
	0x47, 0x72, 0x65, 0x65, 0x74, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x37, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x76, 0x31, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x68, 0x65, 0x6c,
	0x6c, 0x6f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x47, 0x72, 0x65, 0x65, 0x74, 0x65, 0x72, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x4f, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47,
	0x72, 0x65, 0x65, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x37, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x31, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x68, 0x65,
	0x6c, 0x6c, 0x6f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x47, 0x72, 0x65, 0x65, 0x74, 0x65, 0x72,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x14, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x47, 0x72, 0x65, 0x65, 0x74, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x5f, 0x0a, 0x14,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x47, 0x72, 0x65, 0x65, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x37, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x23, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x68, 0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e,
	0x47, 0x72, 0x65, 0x65, 0x74, 0x65, 0x72, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x67, 0x0a,
	0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x47, 0x72, 0x65, 0x65, 0x74, 0x65, 0x72, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x37, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x31, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x68, 0x65,
	0x6c, 0x6c, 0x6f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x47, 0x72, 0x65, 0x65, 0x74, 0x65, 0x72,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x26, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x47, 0x72, 0x65, 0x65, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x14,
	0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x47, 0x72, 0x65, 0x65, 0x74, 0x65, 0x72, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0x23, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x47, 0x72, 0x65, 0x65, 0x74,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x11, 0x0a, 0x0f, 0x47, 0x65, 0x74,
	0x47, 0x72, 0x65, 0x65, 0x74, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x9f, 0x01, 0x0a,
	0x12, 0x4c, 0x69, 0x73, 0x74, 0x47, 0x72, 0x65, 0x65, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x88,
	0x01, 0x01, 0x12, 0x20, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x48, 0x01, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a,
	0x65, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x09, 0x6e, 0x6f, 0x5f, 0x70, 0x61, 0x67, 0x69, 0x6e,
	0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x48, 0x02, 0x52, 0x08, 0x6e, 0x6f, 0x50, 0x61, 0x67,
	0x69, 0x6e, 0x67, 0x88, 0x01, 0x01, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x63, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x74, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65,
	0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x6e, 0x6f, 0x5f, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x22, 0xd3,
	0x01, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x47, 0x72, 0x65, 0x65, 0x74, 0x65, 0x72, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x12, 0x37, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x23, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x68, 0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x47,
	0x72, 0x65, 0x65, 0x74, 0x65, 0x72, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x2a, 0x0a, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x73, 0x2e, 0x72, 0x70, 0x63, 0x65, 0x72, 0x72, 0x2e, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x2a, 0x0a, 0x05, 0x65, 0x78, 0x74, 0x72,
	0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x05, 0x65,
	0x78, 0x74, 0x72, 0x61, 0x32, 0xb7, 0x06, 0x0a, 0x0e, 0x47, 0x72, 0x65, 0x65, 0x74, 0x65, 0x72,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x7d, 0x0a, 0x08, 0x53, 0x61, 0x79, 0x48, 0x65,
	0x6c, 0x6c, 0x6f, 0x12, 0x2a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x68, 0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x6f, 0x72, 0x6c, 0x64,
	0x2e, 0x47, 0x72, 0x65, 0x65, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x28, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x68, 0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x47, 0x72, 0x65,
	0x65, 0x74, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x1b, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x15, 0x12, 0x13, 0x2f, 0x67, 0x72, 0x65, 0x65, 0x74, 0x65, 0x72, 0x2f, 0x7b, 0x69, 0x64, 0x7d,
	0x2f, 0x68, 0x65, 0x6c, 0x6c, 0x6f, 0x12, 0x89, 0x01, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x47, 0x72, 0x65, 0x65, 0x74, 0x65, 0x72, 0x12, 0x30, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x31, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x68, 0x65, 0x6c, 0x6c, 0x6f,
	0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x72, 0x65, 0x65,
	0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x76, 0x31, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x68, 0x65, 0x6c,
	0x6c, 0x6f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x72,
	0x65, 0x65, 0x74, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x16, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x10, 0x3a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x08, 0x2f, 0x67, 0x72, 0x65, 0x65, 0x74,
	0x65, 0x72, 0x12, 0x8e, 0x01, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x47, 0x72, 0x65,
	0x65, 0x74, 0x65, 0x72, 0x12, 0x30, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x68, 0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x6f, 0x72, 0x6c,
	0x64, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x47, 0x72, 0x65, 0x65, 0x74, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x68, 0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x6f,
	0x72, 0x6c, 0x64, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x47, 0x72, 0x65, 0x65, 0x74, 0x65,
	0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x1b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x15, 0x3a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x1a, 0x0d, 0x2f, 0x67, 0x72, 0x65, 0x65, 0x74, 0x65, 0x72, 0x2f, 0x7b,
	0x69, 0x64, 0x7d, 0x12, 0x88, 0x01, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x47, 0x72,
	0x65, 0x65, 0x74, 0x65, 0x72, 0x12, 0x30, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x68, 0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x6f, 0x72,
	0x6c, 0x64, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x47, 0x72, 0x65, 0x65, 0x74, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x68, 0x65, 0x6c, 0x6c, 0x6f, 0x77,
	0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x47, 0x72, 0x65, 0x65, 0x74,
	0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x15, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0f, 0x2a,
	0x0d, 0x2f, 0x67, 0x72, 0x65, 0x65, 0x74, 0x65, 0x72, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x7f,
	0x0a, 0x0a, 0x47, 0x65, 0x74, 0x47, 0x72, 0x65, 0x65, 0x74, 0x65, 0x72, 0x12, 0x2d, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x68,
	0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x72, 0x65,
	0x65, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x31, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x68, 0x65,
	0x6c, 0x6c, 0x6f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x72, 0x65, 0x65,
	0x74, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x15, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0f,
	0x12, 0x0d, 0x2f, 0x67, 0x72, 0x65, 0x65, 0x74, 0x65, 0x72, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12,
	0x7d, 0x0a, 0x0b, 0x4c, 0x69, 0x73, 0x74, 0x47, 0x72, 0x65, 0x65, 0x74, 0x65, 0x72, 0x12, 0x2e,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x68, 0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x47, 0x72, 0x65, 0x65, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x68, 0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x47, 0x72, 0x65, 0x65, 0x74, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x10, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x0a, 0x12, 0x08, 0x2f, 0x67, 0x72, 0x65, 0x65, 0x74, 0x65, 0x72, 0x3a, 0x5c,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1f, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xe8, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x68, 0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x47, 0x72, 0x65, 0x65,
	0x74, 0x65, 0x72, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x88, 0x01, 0x01, 0x42, 0x6d, 0x0a, 0x28,
	0x63, 0x6f, 0x6d, 0x2e, 0x6f, 0x72, 0x69, 0x67, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x31, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x68, 0x65,
	0x6c, 0x6c, 0x6f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x42, 0x1c, 0x41, 0x50, 0x49, 0x56, 0x31, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x6f, 0x72, 0x6c,
	0x64, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x21, 0x76, 0x31, 0x2f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x68, 0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x6f, 0x72, 0x6c, 0x64,
	0x3b, 0x68, 0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_v1_protos_helloworld_greeter_proto_rawDescOnce sync.Once
	file_v1_protos_helloworld_greeter_proto_rawDescData = file_v1_protos_helloworld_greeter_proto_rawDesc
)

func file_v1_protos_helloworld_greeter_proto_rawDescGZIP() []byte {
	file_v1_protos_helloworld_greeter_proto_rawDescOnce.Do(func() {
		file_v1_protos_helloworld_greeter_proto_rawDescData = protoimpl.X.CompressGZIP(file_v1_protos_helloworld_greeter_proto_rawDescData)
	})
	return file_v1_protos_helloworld_greeter_proto_rawDescData
}

var file_v1_protos_helloworld_greeter_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_v1_protos_helloworld_greeter_proto_goTypes = []any{
	(*Greeter)(nil),                     // 0: api.v1.services.helloworld.Greeter
	(*GreeterRequest)(nil),              // 1: api.v1.services.helloworld.GreeterRequest
	(*GreeterReply)(nil),                // 2: api.v1.services.helloworld.GreeterReply
	(*CreateGreeterRequest)(nil),        // 3: api.v1.services.helloworld.CreateGreeterRequest
	(*CreateGreeterReply)(nil),          // 4: api.v1.services.helloworld.CreateGreeterReply
	(*UpdateGreeterRequest)(nil),        // 5: api.v1.services.helloworld.UpdateGreeterRequest
	(*UpdateGreeterReply)(nil),          // 6: api.v1.services.helloworld.UpdateGreeterReply
	(*DeleteGreeterRequest)(nil),        // 7: api.v1.services.helloworld.DeleteGreeterRequest
	(*DeleteGreeterReply)(nil),          // 8: api.v1.services.helloworld.DeleteGreeterReply
	(*GetGreeterRequest)(nil),           // 9: api.v1.services.helloworld.GetGreeterRequest
	(*GetGreeterReply)(nil),             // 10: api.v1.services.helloworld.GetGreeterReply
	(*ListGreeterRequest)(nil),          // 11: api.v1.services.helloworld.ListGreeterRequest
	(*ListGreeterReply)(nil),            // 12: api.v1.services.helloworld.ListGreeterReply
	(*rpcerr.Error)(nil),                // 13: errors.rpcerr.Error
	(*anypb.Any)(nil),                   // 14: google.protobuf.Any
	(*descriptorpb.MessageOptions)(nil), // 15: google.protobuf.MessageOptions
}
var file_v1_protos_helloworld_greeter_proto_depIdxs = []int32{
	0,  // 0: api.v1.services.helloworld.GreeterReply.data:type_name -> api.v1.services.helloworld.Greeter
	0,  // 1: api.v1.services.helloworld.CreateGreeterRequest.data:type_name -> api.v1.services.helloworld.Greeter
	0,  // 2: api.v1.services.helloworld.UpdateGreeterRequest.data:type_name -> api.v1.services.helloworld.Greeter
	0,  // 3: api.v1.services.helloworld.UpdateGreeterReply.data:type_name -> api.v1.services.helloworld.Greeter
	0,  // 4: api.v1.services.helloworld.ListGreeterReply.data:type_name -> api.v1.services.helloworld.Greeter
	13, // 5: api.v1.services.helloworld.ListGreeterReply.error:type_name -> errors.rpcerr.Error
	14, // 6: api.v1.services.helloworld.ListGreeterReply.extra:type_name -> google.protobuf.Any
	15, // 7: api.v1.services.helloworld.data:extendee -> google.protobuf.MessageOptions
	0,  // 8: api.v1.services.helloworld.data:type_name -> api.v1.services.helloworld.Greeter
	1,  // 9: api.v1.services.helloworld.GreeterService.SayHello:input_type -> api.v1.services.helloworld.GreeterRequest
	3,  // 10: api.v1.services.helloworld.GreeterService.CreateGreeter:input_type -> api.v1.services.helloworld.CreateGreeterRequest
	5,  // 11: api.v1.services.helloworld.GreeterService.UpdateGreeter:input_type -> api.v1.services.helloworld.UpdateGreeterRequest
	7,  // 12: api.v1.services.helloworld.GreeterService.DeleteGreeter:input_type -> api.v1.services.helloworld.DeleteGreeterRequest
	9,  // 13: api.v1.services.helloworld.GreeterService.GetGreeter:input_type -> api.v1.services.helloworld.GetGreeterRequest
	11, // 14: api.v1.services.helloworld.GreeterService.ListGreeter:input_type -> api.v1.services.helloworld.ListGreeterRequest
	2,  // 15: api.v1.services.helloworld.GreeterService.SayHello:output_type -> api.v1.services.helloworld.GreeterReply
	4,  // 16: api.v1.services.helloworld.GreeterService.CreateGreeter:output_type -> api.v1.services.helloworld.CreateGreeterReply
	6,  // 17: api.v1.services.helloworld.GreeterService.UpdateGreeter:output_type -> api.v1.services.helloworld.UpdateGreeterReply
	8,  // 18: api.v1.services.helloworld.GreeterService.DeleteGreeter:output_type -> api.v1.services.helloworld.DeleteGreeterReply
	10, // 19: api.v1.services.helloworld.GreeterService.GetGreeter:output_type -> api.v1.services.helloworld.GetGreeterReply
	12, // 20: api.v1.services.helloworld.GreeterService.ListGreeter:output_type -> api.v1.services.helloworld.ListGreeterReply
	15, // [15:21] is the sub-list for method output_type
	9,  // [9:15] is the sub-list for method input_type
	8,  // [8:9] is the sub-list for extension type_name
	7,  // [7:8] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_v1_protos_helloworld_greeter_proto_init() }
func file_v1_protos_helloworld_greeter_proto_init() {
	if File_v1_protos_helloworld_greeter_proto != nil {
		return
	}
	file_v1_protos_helloworld_greeter_proto_msgTypes[11].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_v1_protos_helloworld_greeter_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 1,
			NumServices:   1,
		},
		GoTypes:           file_v1_protos_helloworld_greeter_proto_goTypes,
		DependencyIndexes: file_v1_protos_helloworld_greeter_proto_depIdxs,
		MessageInfos:      file_v1_protos_helloworld_greeter_proto_msgTypes,
		ExtensionInfos:    file_v1_protos_helloworld_greeter_proto_extTypes,
	}.Build()
	File_v1_protos_helloworld_greeter_proto = out.File
	file_v1_protos_helloworld_greeter_proto_rawDesc = nil
	file_v1_protos_helloworld_greeter_proto_goTypes = nil
	file_v1_protos_helloworld_greeter_proto_depIdxs = nil
}
