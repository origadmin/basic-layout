// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        v5.28.3
// source: configs/bootstrap.proto

package configs

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	v1 "github.com/origadmin/runtime/gen/go/config/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type EntrySelectorConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Global  bool   `protobuf:"varint,2,opt,name=global,proto3" json:"global,omitempty"`
	Name    string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Version string `protobuf:"bytes,4,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *EntrySelectorConfig) Reset() {
	*x = EntrySelectorConfig{}
	mi := &file_configs_bootstrap_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EntrySelectorConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EntrySelectorConfig) ProtoMessage() {}

func (x *EntrySelectorConfig) ProtoReflect() protoreflect.Message {
	mi := &file_configs_bootstrap_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EntrySelectorConfig.ProtoReflect.Descriptor instead.
func (*EntrySelectorConfig) Descriptor() ([]byte, []int) {
	return file_configs_bootstrap_proto_rawDescGZIP(), []int{0}
}

func (x *EntrySelectorConfig) GetGlobal() bool {
	if x != nil {
		return x.Global
	}
	return false
}

func (x *EntrySelectorConfig) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *EntrySelectorConfig) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

type Bootstrap struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mode        string           `protobuf:"bytes,1,opt,name=mode,proto3" json:"mode,omitempty"`
	ServiceName string           `protobuf:"bytes,2,opt,name=service_name,proto3" json:"service_name,omitempty"`
	CryptoType  string           `protobuf:"bytes,3,opt,name=crypto_type,proto3" json:"crypto_type,omitempty"`
	Version     string           `protobuf:"bytes,4,opt,name=version,proto3" json:"version,omitempty"`
	Entry       *Bootstrap_Entry `protobuf:"bytes,100,opt,name=entry,proto3" json:"entry,omitempty"`
	Source      *v1.SourceConfig `protobuf:"bytes,200,opt,name=source,proto3" json:"source,omitempty"`
	Registry    *v1.Registry     `protobuf:"bytes,300,opt,name=registry,proto3" json:"registry,omitempty"`
	Registries  []*v1.Registry   `protobuf:"bytes,400,rep,name=registries,proto3" json:"registries,omitempty"`
	Data        *v1.Data         `protobuf:"bytes,500,opt,name=data,proto3" json:"data,omitempty"`
	Setting     *Setting         `protobuf:"bytes,600,opt,name=setting,proto3" json:"setting,omitempty"`
	Service     *v1.Service      `protobuf:"bytes,700,opt,name=service,proto3" json:"service,omitempty"`
	Middleware  *v1.Middleware   `protobuf:"bytes,800,opt,name=middleware,proto3" json:"middleware,omitempty"`
}

func (x *Bootstrap) Reset() {
	*x = Bootstrap{}
	mi := &file_configs_bootstrap_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Bootstrap) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Bootstrap) ProtoMessage() {}

func (x *Bootstrap) ProtoReflect() protoreflect.Message {
	mi := &file_configs_bootstrap_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Bootstrap.ProtoReflect.Descriptor instead.
func (*Bootstrap) Descriptor() ([]byte, []int) {
	return file_configs_bootstrap_proto_rawDescGZIP(), []int{1}
}

func (x *Bootstrap) GetMode() string {
	if x != nil {
		return x.Mode
	}
	return ""
}

func (x *Bootstrap) GetServiceName() string {
	if x != nil {
		return x.ServiceName
	}
	return ""
}

func (x *Bootstrap) GetCryptoType() string {
	if x != nil {
		return x.CryptoType
	}
	return ""
}

func (x *Bootstrap) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *Bootstrap) GetEntry() *Bootstrap_Entry {
	if x != nil {
		return x.Entry
	}
	return nil
}

func (x *Bootstrap) GetSource() *v1.SourceConfig {
	if x != nil {
		return x.Source
	}
	return nil
}

func (x *Bootstrap) GetRegistry() *v1.Registry {
	if x != nil {
		return x.Registry
	}
	return nil
}

func (x *Bootstrap) GetRegistries() []*v1.Registry {
	if x != nil {
		return x.Registries
	}
	return nil
}

func (x *Bootstrap) GetData() *v1.Data {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *Bootstrap) GetSetting() *Setting {
	if x != nil {
		return x.Setting
	}
	return nil
}

func (x *Bootstrap) GetService() *v1.Service {
	if x != nil {
		return x.Service
	}
	return nil
}

func (x *Bootstrap) GetMiddleware() *v1.Middleware {
	if x != nil {
		return x.Middleware
	}
	return nil
}

// Entry
type Bootstrap_Entry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name          string               `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Scheme        string               `protobuf:"bytes,2,opt,name=scheme,proto3" json:"scheme,omitempty"`
	Addr          string               `protobuf:"bytes,3,opt,name=addr,proto3" json:"addr,omitempty"`
	Network       string               `protobuf:"bytes,4,opt,name=network,proto3" json:"network,omitempty"`
	Weight        string               `protobuf:"bytes,5,opt,name=weight,proto3" json:"weight,omitempty"`
	Timeout       *durationpb.Duration `protobuf:"bytes,6,opt,name=timeout,proto3,oneof" json:"timeout,omitempty"`
	EnableSwagger bool                 `protobuf:"varint,7,opt,name=enable_swagger,proto3" json:"enable_swagger,omitempty"`
	EnablePprof   bool                 `protobuf:"varint,8,opt,name=enable_pprof,proto3" json:"enable_pprof,omitempty"`
	Selector      *EntrySelectorConfig `protobuf:"bytes,100,opt,name=selector,proto3" json:"selector,omitempty"`
}

func (x *Bootstrap_Entry) Reset() {
	*x = Bootstrap_Entry{}
	mi := &file_configs_bootstrap_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Bootstrap_Entry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Bootstrap_Entry) ProtoMessage() {}

func (x *Bootstrap_Entry) ProtoReflect() protoreflect.Message {
	mi := &file_configs_bootstrap_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Bootstrap_Entry.ProtoReflect.Descriptor instead.
func (*Bootstrap_Entry) Descriptor() ([]byte, []int) {
	return file_configs_bootstrap_proto_rawDescGZIP(), []int{1, 0}
}

func (x *Bootstrap_Entry) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Bootstrap_Entry) GetScheme() string {
	if x != nil {
		return x.Scheme
	}
	return ""
}

func (x *Bootstrap_Entry) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

func (x *Bootstrap_Entry) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

func (x *Bootstrap_Entry) GetWeight() string {
	if x != nil {
		return x.Weight
	}
	return ""
}

func (x *Bootstrap_Entry) GetTimeout() *durationpb.Duration {
	if x != nil {
		return x.Timeout
	}
	return nil
}

func (x *Bootstrap_Entry) GetEnableSwagger() bool {
	if x != nil {
		return x.EnableSwagger
	}
	return false
}

func (x *Bootstrap_Entry) GetEnablePprof() bool {
	if x != nil {
		return x.EnablePprof
	}
	return false
}

func (x *Bootstrap_Entry) GetSelector() *EntrySelectorConfig {
	if x != nil {
		return x.Selector
	}
	return nil
}

var File_configs_bootstrap_proto protoreflect.FileDescriptor

var file_configs_bootstrap_proto_rawDesc = []byte{
	0x0a, 0x17, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x2f, 0x62, 0x6f, 0x6f, 0x74, 0x73, 0x74,
	0x72, 0x61, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x11, 0x6f, 0x72, 0x69, 0x67, 0x61,
	0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x1a, 0x1b, 0x62, 0x75,
	0x66, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64,
	0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x14, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1a, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x69, 0x64, 0x64, 0x6c,
	0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x18, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2f, 0x76, 0x31,
	0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x16,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x15, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x2f,
	0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x5b, 0x0a,
	0x13, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x97, 0x07, 0x0a, 0x09, 0x42,
	0x6f, 0x6f, 0x74, 0x73, 0x74, 0x72, 0x61, 0x70, 0x12, 0x2d, 0x0a, 0x04, 0x6d, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x19, 0xba, 0x48, 0x16, 0x72, 0x14, 0x52, 0x09, 0x73,
	0x69, 0x6e, 0x67, 0x6c, 0x65, 0x74, 0x6f, 0x6e, 0x52, 0x07, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65,
	0x72, 0x52, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x63,
	0x72, 0x79, 0x70, 0x74, 0x6f, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x38, 0x0a, 0x05, 0x65, 0x6e, 0x74, 0x72, 0x79,
	0x18, 0x64, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x6f, 0x72, 0x69, 0x67, 0x61, 0x64, 0x6d,
	0x69, 0x6e, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x2e, 0x42, 0x6f, 0x6f, 0x74, 0x73,
	0x74, 0x72, 0x61, 0x70, 0x2e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x65, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x30, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0xc8, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x06, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x12, 0x30, 0x0a, 0x08, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x18,
	0xac, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e,
	0x76, 0x31, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x52, 0x08, 0x72, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x72, 0x79, 0x12, 0x34, 0x0a, 0x0a, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72,
	0x69, 0x65, 0x73, 0x18, 0x90, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x52,
	0x0a, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x69, 0x65, 0x73, 0x12, 0x24, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0xf4, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x12, 0x35, 0x0a, 0x07, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x18, 0xd8, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6f, 0x72, 0x69, 0x67, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52,
	0x07, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x2d, 0x0a, 0x07, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x18, 0xbc, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x07,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x36, 0x0a, 0x0a, 0x6d, 0x69, 0x64, 0x64, 0x6c,
	0x65, 0x77, 0x61, 0x72, 0x65, 0x18, 0xa0, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77,
	0x61, 0x72, 0x65, 0x52, 0x0a, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x1a,
	0xe2, 0x02, 0x0a, 0x05, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x29, 0x0a,
	0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x11, 0xba,
	0x48, 0x0e, 0x72, 0x0c, 0x52, 0x04, 0x68, 0x74, 0x74, 0x70, 0x52, 0x04, 0x67, 0x72, 0x70, 0x63,
	0x52, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x64, 0x64, 0x72,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x61, 0x64, 0x64, 0x72, 0x12, 0x18, 0x0a, 0x07,
	0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6e,
	0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x12, 0x16, 0x0a, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x38,
	0x0a, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x07, 0x74, 0x69,
	0x6d, 0x65, 0x6f, 0x75, 0x74, 0x88, 0x01, 0x01, 0x12, 0x26, 0x0a, 0x0e, 0x65, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x5f, 0x73, 0x77, 0x61, 0x67, 0x67, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0e, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x73, 0x77, 0x61, 0x67, 0x67, 0x65, 0x72,
	0x12, 0x22, 0x0a, 0x0c, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x70, 0x70, 0x72, 0x6f, 0x66,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x70,
	0x70, 0x72, 0x6f, 0x66, 0x12, 0x42, 0x0a, 0x08, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x18, 0x64, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x6f, 0x72, 0x69, 0x67, 0x61, 0x64, 0x6d,
	0x69, 0x6e, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x2e, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x08,
	0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x6f, 0x75, 0x74, 0x42, 0x62, 0x0a, 0x29, 0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x6f, 0x72, 0x69, 0x67, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x62, 0x61, 0x73,
	0x69, 0x63, 0x2d, 0x6c, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x73, 0x42, 0x0c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50,
	0x01, 0x5a, 0x18, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x73, 0x3b, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0xf8, 0x01, 0x01, 0xa2, 0x02,
	0x07, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_configs_bootstrap_proto_rawDescOnce sync.Once
	file_configs_bootstrap_proto_rawDescData = file_configs_bootstrap_proto_rawDesc
)

func file_configs_bootstrap_proto_rawDescGZIP() []byte {
	file_configs_bootstrap_proto_rawDescOnce.Do(func() {
		file_configs_bootstrap_proto_rawDescData = protoimpl.X.CompressGZIP(file_configs_bootstrap_proto_rawDescData)
	})
	return file_configs_bootstrap_proto_rawDescData
}

var file_configs_bootstrap_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_configs_bootstrap_proto_goTypes = []any{
	(*EntrySelectorConfig)(nil), // 0: origadmin.configs.EntrySelectorConfig
	(*Bootstrap)(nil),           // 1: origadmin.configs.Bootstrap
	(*Bootstrap_Entry)(nil),     // 2: origadmin.configs.Bootstrap.Entry
	(*v1.SourceConfig)(nil),     // 3: config.v1.SourceConfig
	(*v1.Registry)(nil),         // 4: config.v1.Registry
	(*v1.Data)(nil),             // 5: config.v1.Data
	(*Setting)(nil),             // 6: origadmin.configs.Setting
	(*v1.Service)(nil),          // 7: config.v1.Service
	(*v1.Middleware)(nil),       // 8: config.v1.Build
	(*durationpb.Duration)(nil), // 9: google.protobuf.Duration
}
var file_configs_bootstrap_proto_depIdxs = []int32{
	2,  // 0: origadmin.configs.Bootstrap.entry:type_name -> origadmin.configs.Bootstrap.Entry
	3,  // 1: origadmin.configs.Bootstrap.source:type_name -> config.v1.SourceConfig
	4,  // 2: origadmin.configs.Bootstrap.registry:type_name -> config.v1.Registry
	4,  // 3: origadmin.configs.Bootstrap.registries:type_name -> config.v1.Registry
	5,  // 4: origadmin.configs.Bootstrap.data:type_name -> config.v1.Data
	6,  // 5: origadmin.configs.Bootstrap.setting:type_name -> origadmin.configs.Setting
	7,  // 6: origadmin.configs.Bootstrap.service:type_name -> config.v1.Service
	8,  // 7: origadmin.configs.Bootstrap.middleware:type_name -> config.v1.Build
	9,  // 8: origadmin.configs.Bootstrap.Entry.timeout:type_name -> google.protobuf.Duration
	0,  // 9: origadmin.configs.Bootstrap.Entry.selector:type_name -> origadmin.configs.EntrySelectorConfig
	10, // [10:10] is the sub-list for method output_type
	10, // [10:10] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_configs_bootstrap_proto_init() }
func file_configs_bootstrap_proto_init() {
	if File_configs_bootstrap_proto != nil {
		return
	}
	file_configs_setting_proto_init()
	file_configs_bootstrap_proto_msgTypes[2].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_configs_bootstrap_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_configs_bootstrap_proto_goTypes,
		DependencyIndexes: file_configs_bootstrap_proto_depIdxs,
		MessageInfos:      file_configs_bootstrap_proto_msgTypes,
	}.Build()
	File_configs_bootstrap_proto = out.File
	file_configs_bootstrap_proto_rawDesc = nil
	file_configs_bootstrap_proto_goTypes = nil
	file_configs_bootstrap_proto_depIdxs = nil
}
