syntax = "proto3";
package kratos.api;

option go_package = "internal/mods/helloworld/conf;conf";

import "google/protobuf/duration.proto";

message Bootstrap {
  string service_name = 1 [json_name = "service_name"];
  string version = 2 [json_name = "version"];
  string crypto_type = 3 [json_name = "crypto_type"];

  Server server = 4;
  Data data = 5;
  Settings settings = 6;
}

message Server {
  message HTTP {
    string network = 1;
    string addr = 2;
    string use_tls = 3 [json_name = "use_tls"];
    string cert_file = 4 [json_name = "cert_file"];
    string key_file = 5 [json_name = "key_file"];
    google.protobuf.Duration timeout = 6 [json_name = "timeout"];
    google.protobuf.Duration shutdown_timeout = 7 [json_name = "shutdown_timeout"];
    google.protobuf.Duration read_timeout = 8 [json_name = "read_timeout"];
    google.protobuf.Duration write_timeout = 9 [json_name = "write_timeout"];
    google.protobuf.Duration idle_timeout = 10 [json_name = "idle_timeout"];
  }
  message GRPC {
    string network = 1;
    string addr = 2;
    string use_tls = 3 [json_name = "use_tls"];
    string cert_file = 4 [json_name = "cert_file"];
    string key_file = 5 [json_name = "key_file"];
    google.protobuf.Duration timeout = 6 [json_name = "timeout"];
    google.protobuf.Duration shutdown_timeout = 7 [json_name = "shutdown_timeout"];
    google.protobuf.Duration read_timeout = 8 [json_name = "read_timeout"];
    google.protobuf.Duration write_timeout = 9 [json_name = "write_timeout"];
    google.protobuf.Duration idle_timeout = 10 [json_name = "idle_timeout"];
  }
  HTTP http = 1;
  GRPC grpc = 2;
  Middleware middleware = 3;
}

message Settings {
  string crypto_type = 1 [json_name = "crypto_type"];
}

message Data {
  message Database {
    string driver = 1;
    string source = 2;
  }
  message Redis {
    string network = 1;
    string addr = 2;
    google.protobuf.Duration read_timeout = 3;
    google.protobuf.Duration write_timeout = 4;
  }
  Database database = 1;
  Redis redis = 2;
}

message Middleware {
  message Metrics {
    bool enabled = 1;
    string name = 2;
  }

  message Traces {
    bool enabled = 1;
    string name = 2;
  }

  message Logger {
    bool enabled = 1;
    string name = 2;
  }

  message Cors {
    bool enabled = 1;
    bool allow_all_origins = 2;
    repeated string allow_origins = 3;
    repeated string allow_methods = 4;
    repeated string allow_headers = 5;
    bool allow_credentials = 6;
    repeated string expose_headers = 7;
    int32 max_age = 8;
    bool allow_wildcard = 9;
    bool allow_browser_extensions = 10;
    bool allow_web_sockets = 11;
    bool allow_files = 12;
  }

  Cors cors = 1;
  Metrics metrics = 2;
  Traces traces = 3;
  Logger logger = 4;
}