# Generated with protoc-gen-openapi
# https://github.com/google/gnostic/tree/master/cmd/protoc-gen-openapi

openapi: 3.0.3
info:
    title: ""
    version: 0.0.1
paths:
    /api/v1/helloworld/greeter:
        get:
            tags:
                - HelloGreeterAPI
            description: ListGreeter lists Greeters
            operationId: HelloGreeterAPI_ListGreeter
            parameters:
                - name: current
                  in: query
                  description: Current page
                  schema:
                    type: integer
                    format: int32
                - name: page_size
                  in: query
                  description: The number of lines per page
                  schema:
                    type: integer
                    format: int32
                - name: no_paging
                  in: query
                  description: Whether not paging
                  schema:
                    type: boolean
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.v1.services.helloworld.ListGreeterResponse'
        post:
            tags:
                - HelloGreeterAPI
            description: CreateGreeter creates a new Greeter
            operationId: HelloGreeterAPI_CreateGreeter
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.v1.services.helloworld.GreeterData'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.v1.services.helloworld.CreateGreeterResponse'
    /api/v1/helloworld/greeter/{id}:
        get:
            tags:
                - HelloGreeterAPI
            description: GetGreeter gets a Greeter
            operationId: HelloGreeterAPI_GetGreeter
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.v1.services.helloworld.GetGreeterResponse'
        put:
            tags:
                - HelloGreeterAPI
            description: UpdateGreeter updates a Greeter
            operationId: HelloGreeterAPI_UpdateGreeter
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.v1.services.helloworld.GreeterData'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.v1.services.helloworld.UpdateGreeterResponse'
        delete:
            tags:
                - HelloGreeterAPI
            description: DeleteGreeter deletes a Greeter
            operationId: HelloGreeterAPI_DeleteGreeter
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.v1.services.helloworld.DeleteGreeterResponse'
    /api/v1/helloworld/greeter/{id}/hello:
        get:
            tags:
                - HelloGreeterAPI
            description: SayHello is a get method
            operationId: HelloGreeterAPI_SayHello
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
                - name: name
                  in: query
                  schema:
                    type: string
                - name: data.id
                  in: query
                  schema:
                    type: string
                - name: data.name
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.v1.services.helloworld.SayHelloResponse'
        post:
            tags:
                - HelloGreeterAPI
            description: PostHello is a post method
            operationId: HelloGreeterAPI_PostHello
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
                - name: name
                  in: query
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.v1.services.helloworld.GreeterData'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.v1.services.helloworld.PostHelloResponse'
    /api/v1/secondworld/greeter:
        get:
            tags:
                - SecondGreeterAPI
            description: ListGreeter lists Greeters
            operationId: SecondGreeterAPI_ListGreeter
            parameters:
                - name: current
                  in: query
                  description: Current page
                  schema:
                    type: integer
                    format: int32
                - name: page_size
                  in: query
                  description: The number of lines per page
                  schema:
                    type: integer
                    format: int32
                - name: no_paging
                  in: query
                  description: Whether not paging
                  schema:
                    type: boolean
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.v1.services.secondworld.ListGreeterResponse'
        post:
            tags:
                - SecondGreeterAPI
            description: CreateGreeter creates a new Greeter
            operationId: SecondGreeterAPI_CreateGreeter
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.v1.services.secondworld.GreeterData'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.v1.services.secondworld.CreateGreeterResponse'
    /api/v1/secondworld/greeter/{id}:
        get:
            tags:
                - SecondGreeterAPI
            description: GetGreeter gets a Greeter
            operationId: SecondGreeterAPI_GetGreeter
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.v1.services.secondworld.GetGreeterResponse'
        put:
            tags:
                - SecondGreeterAPI
            description: UpdateGreeter updates a Greeter
            operationId: SecondGreeterAPI_UpdateGreeter
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.v1.services.secondworld.GreeterData'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.v1.services.secondworld.UpdateGreeterResponse'
        delete:
            tags:
                - SecondGreeterAPI
            description: DeleteGreeter deletes a Greeter
            operationId: SecondGreeterAPI_DeleteGreeter
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.v1.services.secondworld.DeleteGreeterResponse'
    /api/v1/secondworld/greeter/{id}/hello:
        get:
            tags:
                - SecondGreeterAPI
            description: SayHello is a get method
            operationId: SecondGreeterAPI_SayHello
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
                - name: name
                  in: query
                  schema:
                    type: string
                - name: data.id
                  in: query
                  schema:
                    type: string
                - name: data.name
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.v1.services.secondworld.SayHelloResponse'
        post:
            tags:
                - SecondGreeterAPI
            description: PostHello is a post method
            operationId: SecondGreeterAPI_PostHello
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
                - name: name
                  in: query
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.v1.services.secondworld.GreeterData'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.v1.services.secondworld.PostHelloResponse'
components:
    schemas:
        api.v1.services.helloworld.CreateGreeterResponse:
            type: object
            properties: {}
        api.v1.services.helloworld.DeleteGreeterResponse:
            type: object
            properties: {}
        api.v1.services.helloworld.GetGreeterResponse:
            type: object
            properties: {}
        api.v1.services.helloworld.GreeterData:
            type: object
            properties:
                id:
                    type: string
                name:
                    type: string
        api.v1.services.helloworld.ListGreeterResponse:
            type: object
            properties:
                success:
                    type: boolean
                total:
                    type: integer
                    format: int32
                data:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.v1.services.helloworld.GreeterData'
                error:
                    $ref: '#/components/schemas/errors.rpcerr.Error'
                extra:
                    $ref: '#/components/schemas/google.protobuf.Any'
        api.v1.services.helloworld.PostHelloResponse:
            type: object
            properties:
                data:
                    $ref: '#/components/schemas/api.v1.services.helloworld.GreeterData'
            description: The response message containing the greetings
        api.v1.services.helloworld.SayHelloResponse:
            type: object
            properties:
                data:
                    $ref: '#/components/schemas/api.v1.services.helloworld.GreeterData'
            description: The response message containing the greetings
        api.v1.services.helloworld.UpdateGreeterResponse:
            type: object
            properties:
                success:
                    type: boolean
                data:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.v1.services.helloworld.GreeterData'
        api.v1.services.secondworld.CreateGreeterResponse:
            type: object
            properties: {}
        api.v1.services.secondworld.DeleteGreeterResponse:
            type: object
            properties: {}
        api.v1.services.secondworld.GetGreeterResponse:
            type: object
            properties: {}
        api.v1.services.secondworld.GreeterData:
            type: object
            properties:
                id:
                    type: string
                name:
                    type: string
        api.v1.services.secondworld.ListGreeterResponse:
            type: object
            properties:
                success:
                    type: boolean
                total:
                    type: integer
                    format: int32
                data:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.v1.services.secondworld.GreeterData'
                error:
                    $ref: '#/components/schemas/errors.rpcerr.Error'
                extra:
                    $ref: '#/components/schemas/google.protobuf.Any'
        api.v1.services.secondworld.PostHelloResponse:
            type: object
            properties:
                data:
                    $ref: '#/components/schemas/api.v1.services.secondworld.GreeterData'
            description: The response message containing the greetings
        api.v1.services.secondworld.SayHelloResponse:
            type: object
            properties:
                data:
                    $ref: '#/components/schemas/api.v1.services.secondworld.GreeterData'
            description: The response message containing the greetings
        api.v1.services.secondworld.UpdateGreeterResponse:
            type: object
            properties:
                success:
                    type: boolean
                data:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.v1.services.secondworld.GreeterData'
        errors.rpcerr.Error:
            type: object
            properties:
                id:
                    type: string
                code:
                    type: integer
                    format: int32
                detail:
                    type: string
        google.protobuf.Any:
            type: object
            properties:
                '@type':
                    type: string
                    description: The type of the serialized message.
            additionalProperties: true
            description: Contains an arbitrary serialized message along with a @type that describes the type of the serialized message.
tags:
    - name: HelloGreeterAPI
      description: The greeting service definition.
    - name: SecondGreeterAPI
      description: The greeting service definition.
